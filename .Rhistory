serve.site()
library(devtools)
site.serve()
serve.site()
serve.install_github("rstudio/blogdown")
library(devtools)
serve.install_github("rstudio/blogdown")
library(blogdown)
install_hugo()
site.serve()
install.packages(c("backports", "curl", "dplyr", "officer", "openssl", "psych", "purrr", "Rcpp", "rvg", "tidyr", "tidyselect"))
install.packages("sparklyr")
library(sparklyr)
spark_install(version = "2.1.0")
devtools::install_github("rstudio/sparklyr")
devtools::install_github("rstudio/sparklyr")
install.packages(c("purrr", "tidyr"))
devtools::install_github("rstudio/sparklyr")
library(sparklyr)
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local")
devtools::install_github("rstudio/sparklyr")
sc <- spark_connect(master = "local", rlang_is_null)
install.packages("rlang")
install.packages("rlang")
library(sparklyr)
sc <- spark_connect(master = "local")
install.packages("rlang")
library(sparklyr)
devtools::install_github("rstudio/sparklyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyverse")
library(sparklyr)
install.packages("tidyr")
install.packages("tidyr")
library(sparklyr)
install.packages("sparklyr")
library(sparklyr)
sc <- spark_connect(master = "local")
install.packages(c("nycflights13", "Lahman"))
library(dplyr)
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
batting_tbl <- copy_to(sc, Lahman::Batting, "batting")
src_tbls(sc)
library(sparklyr)
sc <- spark_connect(master = "local")
library(dplyr)
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
batting_tbl <- copy_to(sc, Lahman::Batting, "batting")
src_tbls(sc)
library(sparklyr)
sc <- spark_connect(master = "local")
install.packages(c("glue", "lazyeval", "lubridate"))
library(devtools)
serve.install_github("rstudio/blogdown")
library(blogdown)
serve.install_github("rstudio/blogdown")
library(blogdown)
library(tidytext)
library(tm)
library(wordcloud)
library(stringr)
library(dplyr)
library(knitr)
library(gutenbergr)
library(ggplot2)
setwd("C:/Users/justin/Desktop/Com_Data/Class_Work")
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula$line <- 1:15568
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$group <- dracula_words$line %/% 80
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
dracula_pos <- dracula_sent%>%
filter(sentiment == 'positive')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 66)
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_neg <- dracula_sent%>%
filter(sentiment == 'negative')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 53)
ggplot()+
geom_bar(data = dracula_neg, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_pos$sent <- 'postive'
dracula_pos
dracula_neg$sent <- 'negative'
ggplot()+
geom_bar(data = dracula_neg, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity', color = sent)+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity', color = sent)+
coord_flip()
dracula_comp
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity', fill = sent)+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp <- factor(dracula_comp$word, levels = dracula_comp$word)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp <- factor(dracula_comp$word, levels = dracula_comp)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp <- factor(dracula_comp$word, levels = dracula_comp$count)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp <- factor(dracula_comp$word, levels = dracula_comp$count)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp
dracula_comp%>%
arrange(count)
dracula_comp <- dracula_comp%>%
arrange(count)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp <- dracula_comp%>%
arrange(count)
dracula_comp <- factor(dracula_comp$word, levels = dracula_comp$count)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp <- dracula_comp%>%
arrange(count)
dracula_comp <- factor(dracula_comp$count, levels = dracula_comp$count)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula_comp
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp <- dracula_comp%>%
arrange(count)
dracula_comp <- factor(dracula_comp$word, levels = dracula_comp$word)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula$line <- 1:15568
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$group <- dracula_words$line %/% 80
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
dracula_pos <- dracula_sent%>%
filter(sentiment == 'positive')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 66)%>%
top_n(10, wt = count)
dracula_pos$sent <- 'postive'
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_pos <- dracula_sent%>%
filter(sentiment == 'positive')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 66)%>%
top_n(10, wt = count)
dracula_pos$sent <- 'postive'
dracula_pos$word <- factor(dracula_pos$word, factor = dracula_pos$word)
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula$line <- 1:15568
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$group <- dracula_words$line %/% 80
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
dracula_pos <- dracula_sent%>%
filter(sentiment == 'positive')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 66)%>%
top_n(10, wt = count)
dracula_pos$sent <- 'postive'
dracula_pos$word <- factor(dracula_pos$word, factor = dracula_pos$word)
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_pos$word <- factor(dracula_pos$word, level = dracula_pos$word)
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_neg <- dracula_sent%>%
filter(sentiment == 'negative')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 53)%>%
top_n(10, wt = count)
dracula_neg$sent <- 'negative'
dracula_neg <- dracula_sent%>%
filter(sentiment == 'negative')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 53)%>%
top_n(10, wt = count)
dracula_neg$sent <- 'negative'
dracula_neg$word <- factor(dracula_neg$word, level = dracula_neg$word)
ggplot()+
geom_bar(data = dracula_neg, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp <- dracula_comp%>%
arrange(count)
dracula_comp$word <- factor(dracula_comp$word, levels = dracula_comp$word)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
bing
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula$line <- 1:15568
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$group <- dracula_words$line %/% 80
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
dracula_pos <- dracula_sent%>%
filter(sentiment == 'positive')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 66)%>%
top_n(10, wt = count)
dracula_pos$sentiment <- 'postive'
dracula_pos$word <- factor(dracula_pos$word, level = dracula_pos$word)
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_neg <- dracula_sent%>%
filter(sentiment == 'negative')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 53)%>%
top_n(10, wt = count)
dracula_neg$sentiment <- 'negative'
dracula_neg$word <- factor(dracula_neg$word, level = dracula_neg$word)
ggplot()+
geom_bar(data = dracula_neg, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp <- dracula_comp%>%
arrange(count)
dracula_comp$word <- factor(dracula_comp$word, levels = dracula_comp$word)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sent, fill = sent), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
dracula_comp$word <- factor(dracula_comp$word, levels = dracula_comp$word)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(sentiment, scales = 'free_y')
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(~sentiment, scales = 'free_y')
dracula_comp <- rbind(dracula_neg, dracula_pos)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(~sentiment, scales = 'free_y')
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula$line <- 1:15568
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$group <- dracula_words$line %/% 80
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
dracula_pos <- dracula_sent%>%
filter(sentiment == 'positive')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 66)%>%
top_n(10, wt = count)
dracula_pos$sentiment <- 'postive'
dracula_pos$word <- factor(dracula_pos$word, level = dracula_pos$word)
ggplot()+
geom_bar(data = dracula_pos, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_neg <- dracula_sent%>%
filter(sentiment == 'negative')%>%
group_by(word)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
filter(count >= 53)%>%
top_n(10, wt = count)
dracula_neg$sentiment <- 'negative'
dracula_neg$word <- factor(dracula_neg$word, level = dracula_neg$word)
ggplot()+
geom_bar(data = dracula_neg, aes(x = word, y = count), stat = 'identity')+
coord_flip()
dracula_comp <- rbind(dracula_neg, dracula_pos)
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(~sentiment, scales = 'free_y')
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(~sentiment, scales = 'free_y')+
scale_fill_manual(values = c('black', '#ea6205'))
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(~sentiment, scales = 'free_y')+
scale_fill_manual(values = c('black', '#ea6205'))+
scale_color_manual(values = c('black', '#ea6205'))
ggplot()+
geom_bar(data = dracula_comp, aes(x = word, y = count, color = sentiment, fill = sentiment), stat = 'identity')+
coord_flip()+
facet_wrap(~sentiment, scales = 'free_y')+
scale_fill_manual(values = c('black', '#ea6205'))+
scale_color_manual(values = c('#ea6205', 'black'))
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula$line <- 1:15568
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$group <- dracula_words$line %/% 80
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
dracula_sent
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent$gutenberg_id <- NULL
bing = get_sentiments('bing')
dracula_sent
dracula_sent <- dracula_sent%>%
group_by(word)%>%
summarise(count = n())
dracula_sent
dracula_sent <- dracula_sent%>%
group_by(word)%>%
select(word, sentiment)%>%
summarise(count = n())
dracula_sent
dracula_sent <- inner_join(bing, dracula_sent)
dracula_sent
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$gutenberg_id <- NULL
dracula_words <- dracula_words%>%
group_by(word)%>%
summarise(count = n())
dracula_sent <- inner_join(bing, dracula_sent)
dracula_sent <- inner_join(bing, dracula_words)
dracula <- gutenberg_download(345)
bing = get_sentiments('bing')
dracula_words <- dracula%>%
unnest_tokens(word, text)
dracula_words$gutenberg_id <- NULL
dracula_words <- dracula_words%>%
group_by(word)%>%
summarise(count = n())
dracula_sent <- inner_join(bing, dracula_words)
dracula_sent
